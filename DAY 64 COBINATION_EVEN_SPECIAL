DAY 64
=======


CODING LANGUAGE:
==================

JAVA

=================================

OUTPUT:
=========

11
13
15
17
19
20
22
24
26
28
31
33
35
37
39
40
42
44
46
48
51
53
55
57
59
60
62
64
66
68
71
73
75
77
79
80
82
84
86
88
91
93
95
97
99

=======================================================================================================================


CODE:

class Combination_problem
 {
 
    static void CombinationRepetitionUtil(int chosen[], int arr[],
            int index, int r, int start, int end) {
                int h=0,d=0,sum=0,c=0,f=0;
        // Since index has become r, current combination is
        // ready to be printed, print
        if (index == r) {
            for (int i = 0; i < r; i++) {
                if(i==0)
                {
                    h=arr[chosen[i]]; 
                    f=h;  
                }
                else
                {
                    h=(h*10)+arr[chosen[i]];
                }  
            }d=h;
            while(d>0)
            {
                c=d%10;
                sum+=c;
                d/=10;
            }
            if(sum%2==0&&f!=0)
            {
            System.out.println(h);
            }
            return;
        }
        for (int i = start; i <= end; i++) {
            chosen[index] = i;
            CombinationRepetitionUtil(chosen, arr, index + 1,
                    r, start, end);
        }
        return;
    }
 
// The main function that prints all combinations of size r
// in arr[] of size n with repetitions. This function mainly
// uses CombinationRepetitionUtil()
    static void CombinationRepetition(int arr[], int n, int r) {
        // Allocate memory
        int chosen[] = new int[r + 1];
 
        // Call the recursive function
        CombinationRepetitionUtil(chosen, arr, 0, r, 0, n - 1);
    }
 
// Driver program to test above functions
    public static void main(String[] args) {
        int arr[] = {0,1,2,3,4,5,6,7,8,9};
        int n = arr.length;
        int r = 2;
        CombinationRepetition(arr, n, r);
    }
}
 
 ==========================================================================================================================================
