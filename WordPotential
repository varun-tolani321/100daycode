Day 3 #100daysofcodechallenge
=============================

CODING LANGUAGE:   JAVA
================   ====



QUESTION 3:
============
           WRITE A PROGRAM TO ENTER A STRING AND THEN PRINT THE POTENTIAL OF EVERY WORD PRESENT IN THE ENTERED STRING.PRINT THE WORD AND AFTER THAT PRINT 
           THE POTENTIAL OF THE WORD.AFTER THAT PRINT THE SENTENCE IN ASCENDING ORDER IN REFRENCE TO THE POTENTIAL OF THE WORD.
==========================================================================================================================================================           

INPUT 1:
======
Enter a sentence : 	my name is varun tolani.

EXPECTED OUTPUT 1:
=================
Potential	 : 	my	= 230
			name	= 417
			is	= 220
			varun	= 556
			tolani	= 647
			
Output		 :  	is my name varun tolani
==================================================================================================================================================================

INPUT 2:
========
Enter a sentence : 	MY NAME IS VARUN TOLANI.

EXPECTED OUTPUT 2:
===================
Potential	 : 	MY	= 166
			NAME	= 289
			IS	= 156
			VARUN	= 396
			TOLANI	= 455
			
Output		 :  	IS MY NAME VARUN TOLANI
==================================================================================================================================================================



CODING:
=======



import java.util.*;
class WordPotential
{
int findPotential(String s) // Function to find potential of a word
    {
        
int p = 0, l = s.length();
        char ch;
        for(int i=0; i<l; i++)
        {
ch = s.charAt(i);
            p = p + (ch);
        }
        return p;
    }// Function to sort the words in ascending order of their potential
    void sortPotential(String w[], int p[]) 
    {
int n = w.length, t1 = 0;
String t="";
for(int i=0; i<n-1; i++)   //looping
        {
         for(int j=i+1; j<n; j++)
            {
                if(p[i]>p[j])
                {
                    t1 = p[i];
                    p[i] = p[j];
                    p[j] = t1;
                    t = w[i];
                    w[i] = w[j];
                    w[j] = t;
                }
            }
        }
printResult(w,p);    
}
   void printResult(String w[], int p[]) // Function to print the final result
    {
int n = w.length;
        String ans="";
        for(int i=0; i<n; i++)
        {
ans = ans + " " + w[i];
        }
ans = ans.trim();
System.out.println("\nOutput\t\t :  \t"+ans);
    }

    public static void main(String args[])
    {
WordPotential ob = new WordPotential();
        Scanner sc = new Scanner(System.in);
System.out.print("Enter a sentence : \t");
        String s = sc.nextLine();
if(s.charAt(s.length()-1)=='?'||(s.charAt(s.length()-1)=='.')||(s.charAt(s.length()-1)=='!'))
{StringTokenizer str = new StringTokenizer(s," .,?!"); //using string tokenizer class
int n = str.countTokens();
String words[] = new String[n];
int potential[] = new int[n];
for(int i=0; i<n; i++)
        {
            words[i] = str.nextToken(); // Saving words one by one in an array
            potential[i] = ob.findPotential(words[i]); // Saving potential of every word
        }

        // Printing the words along with their potential
System.out.print("\nPotential\t : \t");
        for(int i=0; i<n; i++)
        {
System.out.println(words[i]+"\t= "+potential[i]);
System.out.print("\t\t\t");
        }
ob.sortPotential(words,potential);
    }
else
System.out.println("INVALID INPUT");
}
}

====================================================================================================================================================================
